{"ast":null,"code":"var _jsxFileName = \"/Users/yixuanliao/sarry94118/2021/spring/02/wbdv-sp21-02-sarry94118-prototype-react-/wbdv-sp21-02-sarry94118-prototype-react-/src/components/details-screen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport movieService from '../services/movie-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DetailsScreen = () => {\n  _s();\n\n  const {\n    imdbID\n  } = useParams();\n  const history = useHistory();\n  const [movie, setMovie] = useState({});\n  useEffect(() => {\n    findMovieByImdbID();\n  }, []);\n\n  const findMovieByImdbID = () => {\n    movieService.findMovieByImdbID(imdbID).then(data => {\n      setMovie(data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        history.goBack();\n      },\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: movie.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.Poster,\n        width: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), \"Description:\", movie.Plot]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), JSON.stringify(movie)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DetailsScreen, \"9xqIcZwEfsihQEO9wTe0Cfsyb4M=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = DetailsScreen;\nexport default DetailsScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailsScreen\");","map":{"version":3,"sources":["/Users/yixuanliao/sarry94118/2021/spring/02/wbdv-sp21-02-sarry94118-prototype-react-/wbdv-sp21-02-sarry94118-prototype-react-/src/components/details-screen.js"],"names":["React","useEffect","useState","useHistory","useParams","movieService","DetailsScreen","imdbID","history","movie","setMovie","findMovieByImdbID","then","data","goBack","Title","Poster","Plot","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAqC,kBAArC;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;;AAGA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM;AAACC,IAAAA;AAAD,MAAWH,SAAS,EAA1B;AACA,QAAOI,OAAO,GAAGL,UAAU,EAA3B;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,iBAAiB;AACpB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,iBAAiB,GAAG,MAAM;AAC5BN,IAAAA,YAAY,CAACM,iBAAb,CAA+BJ,MAA/B,EACKK,IADL,CACWC,IAAD,IAAU;AACZH,MAAAA,QAAQ,CAACG,IAAD,CAAR;AACH,KAHL;AAIH,GALD;;AAOA,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAACL,QAAAA,OAAO,CAACM,MAAR;AAAiB,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKL,KAAK,CAACM;AAAX;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEN,KAAK,CAACO,MAAhB;AAAwB,QAAA,KAAK,EAAE;AAA/B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,kBAGiBP,KAAK,CAACQ,IAHvB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EASKC,IAAI,CAACC,SAAL,CAAeV,KAAf,CATL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA7BD;;GAAMH,a;UACeF,S,EACAD,U;;;KAFfG,a;AA+BN,eAAeA,aAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport  {useHistory, useParams} from 'react-router-dom'\nimport movieService from '../services/movie-service'\n\n\nconst DetailsScreen = () => {\n    const {imdbID} = useParams();\n    const  history = useHistory();\n    const [movie, setMovie] = useState({})\n    useEffect(() => {\n        findMovieByImdbID()\n    }, [])\n\n    const findMovieByImdbID = () => {\n        movieService.findMovieByImdbID(imdbID)\n            .then((data) => {\n                setMovie(data)\n            })\n    }\n\n    return(\n        <div>\n            <button onClick={() => {history.goBack()}}>Back</button>\n            <h2>{movie.Title}</h2>\n            <p>\n                <img src={movie.Poster} width={100}/>\n                <br/>\n                Description:{movie.Plot}\n            </p>\n\n            {JSON.stringify(movie)}\n        </div>\n    )\n\n}\n\nexport default DetailsScreen\n\n"]},"metadata":{},"sourceType":"module"}