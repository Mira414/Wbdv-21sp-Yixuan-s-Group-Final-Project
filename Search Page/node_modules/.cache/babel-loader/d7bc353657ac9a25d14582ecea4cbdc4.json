{"ast":null,"code":"//\n// const findMovieByTitle = (breed, accessToken) => {\n//\n//     return fetch(`https://api.petfinder.com/v2/animals?type=${breed}&page=2`, {\n//         method: 'GET',\n//         mode: 'cors',\n//         credentials: 'same-origin',\n//         headers: {\n//             'Content-Type': 'application/json',\n//             Authorization: `Bearer ${accessToken}`,\n//\n//         }\n//     })\n//         .then(response =>\n//             response.json()\n//         )\n//\n// }\n//\n// const findMovieByImdbID = (id, accessToken) => {\n//     return fetch(`https://api.petfinder.com/v2/animals/${id}`, {\n//         method: 'GET',\n//         headers: {\n//             'Content-Type': 'application/json',\n//             Authorization: `Bearer ${accessToken}`,\n//         }\n//     })\n//         .then(response => response.json())\n// }\n//\n// export  default {\n//     findMovieByTitle,\n//     findMovieByImdbID\n// }\nconst findBreed = (type, breed, accessToken) => {\n  return fetch(`https://api.petfinder.com/v2/animals?breed=${breed}&page=2`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${accessToken}`\n    }\n  }).then(response => response.json());\n};\n\nconst findPetByTypes = (type, accessToken) => {\n  return fetch(`https://api.petfinder.com/v2/animals?type=${type}&page=20`, {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'same-origin',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${accessToken}`\n    }\n  }).then(response => response.json());\n};\n\nconst findPetByID = (id, accessToken) => {\n  return fetch(`https://api.petfinder.com/v2/animals/${id}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${accessToken}`\n    }\n  }).then(response => response.json());\n};\n\nexport default {\n  findPetByTypes,\n  findPetByID,\n  findBreed\n};","map":{"version":3,"sources":["/Users/yixuanliao/sarry94118/2021/spring/02/petfinder/pet/pet2/backup/src/services/pet-service.js"],"names":["findBreed","type","breed","accessToken","fetch","method","headers","Authorization","then","response","json","findPetByTypes","mode","credentials","findPetByID","id"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,SAAS,GAAE,CAACC,IAAD,EAAOC,KAAP,EAAcC,WAAd,KAA8B;AAE3C,SAAOC,KAAK,CAAE,8CAA6CF,KAAM,SAArD,EAA+D;AACvEG,IAAAA,MAAM,EAAE,KAD+D;AAEvEC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAELC,MAAAA,aAAa,EAAG,UAASJ,WAAY;AAFhC;AAF8D,GAA/D,CAAL,CAOJK,IAPI,CAOCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPb,CAAP;AASH,CAXD;;AAcA,MAAMC,cAAc,GAAG,CAACV,IAAD,EAAOE,WAAP,KAAuB;AAE1C,SAAOC,KAAK,CAAE,6CAA4CH,IAAK,UAAnD,EAA8D;AACtEI,IAAAA,MAAM,EAAE,KAD8D;AAEtEO,IAAAA,IAAI,EAAE,MAFgE;AAGtEC,IAAAA,WAAW,EAAE,aAHyD;AAItEP,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAELC,MAAAA,aAAa,EAAG,UAASJ,WAAY;AAFhC;AAJ6D,GAA9D,CAAL,CASJK,IATI,CASCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EATb,CAAP;AAWH,CAbD;;AAeA,MAAMI,WAAW,GAAG,CAACC,EAAD,EAAKZ,WAAL,KAAqB;AACrC,SAAOC,KAAK,CAAE,wCAAuCW,EAAG,EAA5C,EAA+C;AACvDV,IAAAA,MAAM,EAAE,KAD+C;AAEvDC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAELC,MAAAA,aAAa,EAAG,UAASJ,WAAY;AAFhC;AAF8C,GAA/C,CAAL,CAOFK,IAPE,CAOGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPf,CAAP;AAQH,CATD;;AAYA,eAAe;AACXC,EAAAA,cADW;AAEXG,EAAAA,WAFW;AAGXd,EAAAA;AAHW,CAAf","sourcesContent":["//\n// const findMovieByTitle = (breed, accessToken) => {\n//\n//     return fetch(`https://api.petfinder.com/v2/animals?type=${breed}&page=2`, {\n//         method: 'GET',\n//         mode: 'cors',\n//         credentials: 'same-origin',\n//         headers: {\n//             'Content-Type': 'application/json',\n//             Authorization: `Bearer ${accessToken}`,\n//\n//         }\n//     })\n//         .then(response =>\n//             response.json()\n//         )\n//\n// }\n//\n// const findMovieByImdbID = (id, accessToken) => {\n//     return fetch(`https://api.petfinder.com/v2/animals/${id}`, {\n//         method: 'GET',\n//         headers: {\n//             'Content-Type': 'application/json',\n//             Authorization: `Bearer ${accessToken}`,\n//         }\n//     })\n//         .then(response => response.json())\n// }\n//\n// export  default {\n//     findMovieByTitle,\n//     findMovieByImdbID\n// }\n\nconst findBreed= (type, breed, accessToken) => {\n\n    return fetch(`https://api.petfinder.com/v2/animals?breed=${breed}&page=2`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${accessToken}`,\n\n        }\n    }).then(response => response.json())\n\n}\n\n\nconst findPetByTypes = (type, accessToken) => {\n\n    return fetch(`https://api.petfinder.com/v2/animals?type=${type}&page=20`, {\n        method: 'GET',\n        mode: 'cors',\n        credentials: 'same-origin',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${accessToken}`,\n\n        }\n    }).then(response => response.json())\n\n}\n\nconst findPetByID = (id, accessToken) => {\n    return fetch(`https://api.petfinder.com/v2/animals/${id}`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${accessToken}`,\n        }\n    })\n        .then(response => response.json())\n}\n\n\nexport default {\n    findPetByTypes,\n    findPetByID,\n    findBreed\n}"]},"metadata":{},"sourceType":"module"}