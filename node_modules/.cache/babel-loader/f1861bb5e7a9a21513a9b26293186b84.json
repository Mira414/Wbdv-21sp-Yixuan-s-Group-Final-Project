{"ast":null,"code":"var _jsxFileName = \"/Users/yixuanliao/sarry94118/2021/spring/02/petfinder/pet/pet2/petfindersearch/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals(); // import ResultPane from \"../result-pane\";\n// import { useEffect, useState, useContext } from \"react\";\n// import { AuthContext } from \"./App\";\n//\n// export default () => {\n//     const [results, setResults] = useState(null);\n//     const accessToken = useContext(AuthContext);\n//     useEffect(() => {\n//         if (accessToken === null) return;\n//         const fetchPets = async () => {\n//             const petResults = await fetch(\n//                 \"https://api.petfinder.com/v2/animals\",\n//                 {\n//                     headers: {\n//                         Authorization: `Bearer ${accessToken}`,\n//                     },\n//                 }\n//             );\n//             const json = await petResults.json();\n//             setResults(json.animals);\n//         };\n//         fetchPets();\n//     }, [accessToken]);\n//     if (results === null) return null;\n//     return <ResultPane results={results} />;\n// };\n//","map":{"version":3,"sources":["/Users/yixuanliao/sarry94118/2021/spring/02/petfinder/pet/pet2/petfindersearch/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,sCAAP;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAGAF,QAAQ,CAACG,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAH,eAAe,G,CAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// import ResultPane from \"../result-pane\";\n// import { useEffect, useState, useContext } from \"react\";\n// import { AuthContext } from \"./App\";\n//\n// export default () => {\n//     const [results, setResults] = useState(null);\n//     const accessToken = useContext(AuthContext);\n//     useEffect(() => {\n//         if (accessToken === null) return;\n//         const fetchPets = async () => {\n//             const petResults = await fetch(\n//                 \"https://api.petfinder.com/v2/animals\",\n//                 {\n//                     headers: {\n//                         Authorization: `Bearer ${accessToken}`,\n//                     },\n//                 }\n//             );\n//             const json = await petResults.json();\n//             setResults(json.animals);\n//         };\n//         fetchPets();\n//     }, [accessToken]);\n//     if (results === null) return null;\n//     return <ResultPane results={results} />;\n// };\n//\n"]},"metadata":{},"sourceType":"module"}