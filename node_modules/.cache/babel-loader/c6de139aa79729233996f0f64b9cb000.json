{"ast":null,"code":"var _jsxFileName = \"/Users/yixuanliao/sarry94118/2021/spring/02/petfinder/pet/pet2/src/components/search-screen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport movieService from \"../services/movie-service\";\nimport { AuthContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst petFinderKey = \"IERoPwTvvsgAtqgT71P7EhCx8nLMCsx4xvvP0zywOA6eSzWWal\";\nconst petFinderSecret = \"InqFifeZbO9QOwtLXTDQROwrzovrIbF2YfKVVl0o\";\n\nconst SearchScreen = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    breed\n  } = useParams();\n  const [searchTitle, setSearchTitle] = useState(breed);\n  const [results, setResults] = useState({\n    type: []\n  });\n  const accessToken = useContext(AuthContext); // const [accessToken, setAccessToken] = useState(null);\n\n  useEffect(() => {\n    // const fetchAccessToken = async () => {\n    //     const params = new URLSearchParams();\n    //     params.append(\"grant_type\", \"client_credentials\");\n    //     params.append(\"client_id\", petFinderKey);\n    //     params.append(\"client_secret\", petFinderSecret);\n    //     const petfinderRes = await fetch(\n    //         \"https://api.petfinder.com/v2/oauth2/token\",\n    //         {\n    //             method: \"POST\",\n    //             body: params,\n    //         }\n    //     )\n    //\n    //     const json = await petfinderRes.json()\n    //     console.log(json.access_token)\n    //     setAccessToken(json.access_token)\n    // }\n    // fetchAccessToken();\n    setSearchTitle(breed);\n    findMoviesByTitle(\"dog\", accessToken);\n    console.log(accessToken);\n  }, []);\n\n  const findMoviesByTitle = (breed, accessToken) => {\n    history.push(`/search/${breed}`);\n    movieService.findMovieByTitle(breed, accessToken).then(results => {\n      setResults(results);\n      console.log(results);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Search Screen\", results.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: searchTitle,\n      onChange: event => {\n        setSearchTitle(event.target.value);\n      },\n      className: \"form-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        findMoviesByTitle(searchTitle);\n      },\n      className: \"btn btn-primary\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: JSON.stringify(results)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: results.types.map(pet =>\n      /*#__PURE__*/\n      // <li className=\"list-group-item\">\n      _jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/details/${pet.id}`,\n          children: pet.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this)\n      }, pet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchScreen, \"qEJs60vsHSZg0la8yllks2ZcmBw=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = SearchScreen;\nexport default SearchScreen; // import React, { Component } from 'react';\n// import axios from 'axios';\n// import './search-style.css';\n//\n// axios.defaults.baseURL = 'https://api.thedogapi.com/v1';\n// axios.defaults.headers.common['x-api-key'] = '9edd9d8f-8716-4a0a-825f-cbc087d86a63';\n//\n// class SearchScreen extends Component {\n//\n//     async getBreeds() {\n//         const res = await axios('/breeds');\n//         return res.data;\n//     }\n//     async getCatsImagesByBreed(breed_id, amount) {\n//         const res = await axios('/images/search?breed_ids='+breed_id + \"&limit=\"+ amount);\n//\n//         console.table(res.data)\n//         return res.data;\n//     }\n//\n//     async loadBreedImages() {\n//         console.log('Load Breed Images:', this.state.selected_breed)\n//\n//         let breed_images = await this.getCatsImagesByBreed(this.state.selected_breed, 5)\n//\n//         this.setState({ images: breed_images });\n//     }\n//\n//     constructor(...args) {\n//\n//         super(...args);\n//         this.state = {\n//             images: [],\n//             breeds: [],\n//             selected_breed: 0\n//         };\n//\n//         this.onBreedSelectChange = this.onBreedSelectChange.bind(this);\n//     }\n//     async onBreedSelectChange(e) {\n//         console.log(\"Breed Selected. ID:\",e.target.value)\n//         await this.setState({selected_breed:e.target.value});\n//         await this.loadBreedImages();\n//     }\n//     componentDidMount() {\n//         if (this.state.breeds.length===0) {\n//             (async () => {\n//                 try {\n//                     this.setState({breeds: await this.getBreeds()});\n//                 } catch (e) {\n//                     //...handle the error...\n//                     console.error(e)\n//                 }\n//             })();\n//         }\n//     }\n//     render() {\n//         return (\n//             <div>\n//\n//                 <select value={this.state.selected_breed}\n//                         onChange={this.onBreedSelectChange}>\n//                     {this.state.breeds.map((breed) => <option key={breed.id} value={breed.id}>{breed.name}</option>)}\n//                 </select>\n//\n//                 <ul className=\"list-group\">\n//                     {this.state.images.map((image) =>\n//\n//                         <li className=\"list-group-item\" key={image.id}>\n//                             <img className=\"cat-image\" alt=\"\" src={image.url}></img>\n//                         </li>\n//                     )\n//                     }\n//\n//                     {/*{this.state.map((pet) =>*/}\n//\n//                     {/*    <li className=\"list-group-item\" key={pet.images.id}>*/}\n//                     {/*        <img className=\"cat-image\" alt=\"\" src={pet.images.url}></img>*/}\n//                     {/*    </li>*/}\n//                     {/*)*/}\n//                     {/*}*/}\n//                 </ul>\n//\n//             </div>\n//         );\n//     }\n// }\n//\n// export default SearchScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchScreen\");","map":{"version":3,"sources":["/Users/yixuanliao/sarry94118/2021/spring/02/petfinder/pet/pet2/src/components/search-screen.js"],"names":["React","useState","useEffect","useContext","Link","useParams","useHistory","movieService","AuthContext","petFinderKey","petFinderSecret","SearchScreen","history","breed","searchTitle","setSearchTitle","results","setResults","type","accessToken","findMoviesByTitle","console","log","push","findMovieByTitle","then","length","event","target","value","JSON","stringify","types","map","pet","id","name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\nimport {Link, useParams, useHistory} from 'react-router-dom'\nimport movieService from \"../services/movie-service\"\nimport {AuthContext} from \"../App\"\nconst petFinderKey = \"IERoPwTvvsgAtqgT71P7EhCx8nLMCsx4xvvP0zywOA6eSzWWal\"\nconst petFinderSecret = \"InqFifeZbO9QOwtLXTDQROwrzovrIbF2YfKVVl0o\"\n\n\nconst SearchScreen = () => {\n    const history = useHistory()\n    const {breed} = useParams();\n    const [searchTitle, setSearchTitle] = useState(breed)\n    const [results, setResults] = useState({type: []})\n    const accessToken = useContext(AuthContext);\n    // const [accessToken, setAccessToken] = useState(null);\n\n    useEffect(() => {\n        // const fetchAccessToken = async () => {\n        //     const params = new URLSearchParams();\n        //     params.append(\"grant_type\", \"client_credentials\");\n        //     params.append(\"client_id\", petFinderKey);\n        //     params.append(\"client_secret\", petFinderSecret);\n        //     const petfinderRes = await fetch(\n        //         \"https://api.petfinder.com/v2/oauth2/token\",\n        //         {\n        //             method: \"POST\",\n        //             body: params,\n        //         }\n        //     )\n        //\n        //     const json = await petfinderRes.json()\n        //     console.log(json.access_token)\n        //     setAccessToken(json.access_token)\n        // }\n        // fetchAccessToken();\n        setSearchTitle(breed)\n        findMoviesByTitle(\"dog\", accessToken)\n        console.log(accessToken)\n\n    }, [])\n    const findMoviesByTitle = (breed, accessToken) => {\n        history.push(`/search/${breed}`)\n\n        movieService.findMovieByTitle(breed, accessToken)\n            .then((results) => {\n                setResults(results)\n                console.log(results)\n\n            })\n    }\n    return (\n        <div>\n            <h2>Search Screen{results.length}</h2>\n            <input value={searchTitle}\n                   onChange={(event) => {\n                       setSearchTitle((event.target.value))\n                   }}\n                   className=\"form-control\"/>\n            <button\n                onClick={() => {\n                    findMoviesByTitle(searchTitle)\n                }}\n                className=\"btn btn-primary\">Search\n            </button>\n            <>\n                {JSON.stringify(results)}\n            </>\n            <ul className=\"list-group\">\n\n                {\n                    results.types.map(pet =>\n                        // <li className=\"list-group-item\">\n                        <li className=\"list-group-item\" key={pet.id}>\n\n                            <Link to={`/details/${pet.id}`}>\n                                {pet.name}\n                            </Link>\n                        </li>\n                    )\n                }\n\n            </ul>\n\n            {/*<li className=\"list-group-item\">*/}\n            {/*    <Link to={`/details/dsdsd`}>*/}\n            {/*    Titanic*/}\n            {/*    </Link>*/}\n            {/*</li>*/}\n            {/*<li className=\"list-group-item\">*/}\n            {/*    Rock Star*/}\n            {/*</li>*/}\n            {/*<li className=\"list-group-item\">*/}\n            {/*    You are lover*/}\n            {/*</li>*/}\n\n        </div>\n    )\n}\n\nexport default SearchScreen\n\n\n// import React, { Component } from 'react';\n// import axios from 'axios';\n// import './search-style.css';\n//\n// axios.defaults.baseURL = 'https://api.thedogapi.com/v1';\n// axios.defaults.headers.common['x-api-key'] = '9edd9d8f-8716-4a0a-825f-cbc087d86a63';\n//\n// class SearchScreen extends Component {\n//\n//     async getBreeds() {\n//         const res = await axios('/breeds');\n//         return res.data;\n//     }\n//     async getCatsImagesByBreed(breed_id, amount) {\n//         const res = await axios('/images/search?breed_ids='+breed_id + \"&limit=\"+ amount);\n//\n//         console.table(res.data)\n//         return res.data;\n//     }\n//\n//     async loadBreedImages() {\n//         console.log('Load Breed Images:', this.state.selected_breed)\n//\n//         let breed_images = await this.getCatsImagesByBreed(this.state.selected_breed, 5)\n//\n//         this.setState({ images: breed_images });\n//     }\n//\n//     constructor(...args) {\n//\n//         super(...args);\n//         this.state = {\n//             images: [],\n//             breeds: [],\n//             selected_breed: 0\n//         };\n//\n//         this.onBreedSelectChange = this.onBreedSelectChange.bind(this);\n//     }\n//     async onBreedSelectChange(e) {\n//         console.log(\"Breed Selected. ID:\",e.target.value)\n//         await this.setState({selected_breed:e.target.value});\n//         await this.loadBreedImages();\n//     }\n//     componentDidMount() {\n//         if (this.state.breeds.length===0) {\n//             (async () => {\n//                 try {\n//                     this.setState({breeds: await this.getBreeds()});\n//                 } catch (e) {\n//                     //...handle the error...\n//                     console.error(e)\n//                 }\n//             })();\n//         }\n//     }\n//     render() {\n//         return (\n//             <div>\n//\n//                 <select value={this.state.selected_breed}\n//                         onChange={this.onBreedSelectChange}>\n//                     {this.state.breeds.map((breed) => <option key={breed.id} value={breed.id}>{breed.name}</option>)}\n//                 </select>\n//\n//                 <ul className=\"list-group\">\n//                     {this.state.images.map((image) =>\n//\n//                         <li className=\"list-group-item\" key={image.id}>\n//                             <img className=\"cat-image\" alt=\"\" src={image.url}></img>\n//                         </li>\n//                     )\n//                     }\n//\n//                     {/*{this.state.map((pet) =>*/}\n//\n//                     {/*    <li className=\"list-group-item\" key={pet.images.id}>*/}\n//                     {/*        <img className=\"cat-image\" alt=\"\" src={pet.images.url}></img>*/}\n//                     {/*    </li>*/}\n//                     {/*)*/}\n//                     {/*}*/}\n//                 </ul>\n//\n//             </div>\n//         );\n//     }\n// }\n//\n// export default SearchScreen;\n"]},"metadata":{},"sourceType":"module"}